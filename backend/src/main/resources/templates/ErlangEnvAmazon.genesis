template {
    name("ErlangAmazon")
    version("0.1")

    createWorkflow("create")
    destroyWorkflow("destroy")

    workflow("create") {
        variables {
            variable("nodesCount").as(Integer).validator {it > 0 && it < 4}.description("Erlang worker nodes count")
        }
        steps {
            provisionVms {
                phase = "provision"
                roleName = "erlangNode"
                hardwareId = "m1.small"
                imageId = "eu-west-1/ami-359ea941"
                quantity = $vars.nodesCount
                retryCount = 3
	            	keyPair = "genesis"
		            securityGroup = "genesis"

            }
            chefrun {
                phase = "install"
                precedingPhases = ["provision"]
                roles = ['erlangNode']
                runList = ["recipe[erlang]"]
            }
        }
    }

    workflow("destroy") {
        steps {
            undeployEnv {
                phase = "destroy"
            }
            clearChefEnv {
                phase = "destroy"
            }
        }
    }

    workflow("scale-up") {
        variables{
            variable("nodesCount").as(Integer).validator {it > 0 && it < 4}.description("Erlang worker nodes count")
        }
        steps {
            provisionVms {
                phase = "provision-scaleup"
                roleName = "erlangNode"
                hardwareId = "m1.small"
                imageId = "eu-west-1/ami-359ea941"
                quantity = $vars.nodesCount
            }
            chefrun {
                phase = "install"
                precedingPhases = ["provision-scaleup"]
                roles = ['erlangNode']
                runList = ["recipe[erlang]"]
                isGlobal = false
            }
        }
    }
}
